<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://jakarta.ee/xml/ns/jakartaee"
    xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd"
    id="WebApp_ID" version="6.0">
    <display-name>running</display-name>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/application-context.xml</param-value>
    </context-param>

    <!-- 리스너(Listener) 설정 -->
    <!-- ContextLoaderListener 이벤트가 발생했을 때 호출되는 명령어는 contextConfigLocation을 
        읽는다. * contextConfigLocation(application-context.xml)은 ContextLoaderListener가 
        할 일을 정의 해놓은 것 -->
    <!-- 스프링 프레임워크의 컨텍스트 로더 리스너 설정: WAS에서 contextLoaded 이벤트가 발생 했을 때, 컨텍스트 파라미터들 
        중에서 contextConfigLocation 파라미터 값(xml 파일의 위치와 이름)을 찾아서 그 xml 파일을 읽고, 스프링 프레임 
        워크를 구동시키는 리스너. -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 필터(Filter) 설정 -->
    <!-- 스프링 프레임워크에서 사용하는 문자열 인코딩 필더 설정 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!-- 필터의 init메서드가 호출될 때 FilterConfig 객체의 parameter에 설정할 값 -->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 필터 TODO -->

    <!-- 서블릿(Servlet) 설정 -->
    <!-- 스프링 프레임워크에서 제공하는 디스패쳐 서블릿 설정 -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/servlet-context.xml</param-value>
        </init-param>
        <!-- 서블릿이 로딩될 우선순위 -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>