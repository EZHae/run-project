<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.itwill.running.repository.TeamDao">
	<!-- 이지해 -->
	<select id="selectTeamByAll" resultType="Team">
		select * from teams
		order by team_id desc
	</select>

	<select id="selectTeamByTeamId" resultType="Team">
		select * from teams
		where team_id = #{teamId}
	</select>

	<!-- TODO 팀삭제, 팀수정, 팀검색(이름,공원타입 등), 내게맞는공고찾기(성별,연령대에맞는) -->
	<select id="selectAll" resultType="Team">
		select t.*, u.nickname as
		nickname from teams t left join users u on
		t.user_id=u.user_id order by
		team_id desc
	</select>

	<select id="selectByTeamId" resultType="Team">
		select t.*,u.nickname as
		nickname from teams t left join users u on
		t.user_id=u.user_id where
		team_id=#{teamId}
	</select>

	<select id="selectClosedTeams" resultType="Team">
		select * from teams
		where max_num=current_num order by team_id desc
	</select>

	<select id="selectOpenTeams" resultType="Team">
		select * from teams
		where current_num != max_num order by team_id desc
	</select>

	<select id="findTeamIdByTeamNameAndUserId" resultType="Integer">
		select
		team_id from teams where team_name=#{teamName} and user_id=#{userId}
	</select>

	<select id="selectCountByTeamName" resultType="Integer">
		select count(*)
		from teams where team_name=#{teamName}
	</select>

	<select id="selectPagedTeams" resultType="Team">
		select *
		from teams
		where
		<if test="status == 'open'">
			max_num != current_num
		</if>
		<if test="status == 'closed'">
			max_num = current_num
		</if>
		order by team_id desc
		offset #{offset} rows fetch next #{limit} rows
		only
	</select>


	<select id="searchPagedTeams" resultType="Team">
		SELECT t.*
		FROM teams t
		<if test="district != 'all'">
			JOIN parks p ON t.park_id = p.id
		</if>
		<where>
			<if test="district != 'all'">
				p.park_loc = #{district}
			</if>
			<if test="keyword != null and keyword != ''">
				<bind name="searchKeyword" value="'%' + keyword + '%'" />
				AND UPPER(t.team_name) LIKE UPPER(#{searchKeyword})
			</if>
			<choose>
				<when test="status == 'closed'">AND t.max_num = t.current_num</when>
				<otherwise>AND t.current_num != t.max_num</otherwise>
			</choose>
		</where>
		ORDER BY t.team_id DESC
		OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS
		ONLY
	</select>


	<select id="countTeamsByFilter" resultType="Integer">
		
			SELECT count(*)
			FROM teams t
			<if test="district != 'all'">
				JOIN parks p ON t.park_id = p.id
			</if>
			<where>
				<if test="district != 'all'">
					p.park_loc = #{district}
				</if>
				<if test="keyword != null and keyword != ''">
					<bind name="searchKeyword" value="'%' + keyword + '%'" />
					AND UPPER(t.team_name) LIKE UPPER(#{searchKeyword})
				</if>
				<choose>
					<when test="status == 'closed'">AND t.max_num = t.current_num</when>
					<otherwise>AND t.current_num != t.max_num</otherwise>
				</choose>
			</where>
	</select>



	<insert id="insertNewTeam">
		insert into teams (team_name, user_id, uniq_name,
		image_path, title,
		content, park_id, current_num, max_num,
		age_limit,
		gender_limit, created_time, modified_time) values (#{teamName},
		#{userId}, #{uniqName}, #{imagePath},
		#{title}, #{content}, #{parkId},
		1, #{maxNum}, #{ageLimit}, #{genderLimit},
		systimestamp, systimestamp)
	</insert>

	<update id="updateTeam">
		update teams set team_name=#{teamName},
		uniq_name=#{uniqName}, image_path=#{imagePath}, title=#{title},
		content=#{content}, max_num=#{maxNum}, age_limit=#{ageLimit},
		gender_limit=#{genderLimit}, modified_time=systimestamp
		where
		team_id=#{teamId}
	</update>

	<delete id="deleteTeam">
		delete from teams where team_id=#{teamId}
	</delete>
    
    <!-- 마이페이지 팀 조회 및 탈퇴 SQL -->
    <select id="selectTeamsByUserId" resultType="Team">
        SELECT t.team_id, t.team_name
        FROM teams t
        JOIN t_members tm ON t.team_id = tm.team_id
        WHERE tm.user_id = #{userId}
    </select>
    
    <delete id="deleteTeamMember">
        delete from t_members 
        where team_id = #{teamId} and user_id = #{userId} 
    </delete>
    
    <delete id="deleteTeamLeader">
        delete from teams 
        where team_id = #{teamId}
    </delete>
    
    <select id="selectTeamLeaderCheck" resultType="Integer">
        select leader_check 
        from t_members
        where team_id = #{teamId} and user_id = #{userId}
    </select>
    
    <!-- 최근 팀 5개까지 가져오는 SQL 문장 -->
    <select id="getNewTeamNameByTeamId" resultType="Team">
        select * from teams
        where current_num != max_num 
        order by team_id desc fetch first 5 rows only
    </select>
</mapper>
