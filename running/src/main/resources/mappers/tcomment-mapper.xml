<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.itwill.running.repository.TCommentDao">
	
	<insert id="insertTComment">
		insert into t_comments (team_id, post_id, ctext, user_id, nickname, created_time, modified_time, parent_id, comment_type)
			values (#{teamId}, #{postId}, #{ctext}, #{userId}, #{nickname}, systimestamp, systimestamp, #{parentId}, #{commentType})
	</insert>
	
	<select id="selectTCommentHierarchyByPostId" resultType="TComment">
		with CommentHierarchy (id, team_id, post_id, ctext, user_id, nickname, created_time, modified_Time, parent_id, comment_type, deleted, RootID, SortTime) AS (
			select id, team_id, post_id, ctext, user_id, nickname, created_time, modified_Time, parent_id, comment_type, deleted, id AS RootID, created_time AS SortTime
				from t_comments
				where parent_id is null
	
			union all
	
			select c.id, c.team_id, c.post_id, c.ctext, c.user_id, c.nickname, c.created_time, c.modified_Time, c.parent_id, c.comment_type, c.deleted, h.RootID, c.created_time AS SortTime
				from t_comments c
				inner join CommentHierarchy h on c.parent_id = h.id
		)
		select id, team_id, post_id, ctext, user_id, nickname, created_time, modified_Time, parent_id, comment_type, deleted
			from CommentHierarchy
			where post_id = #{postId}
			order by RootID, SortTime
	</select>
	
	<select id="selectTCommentById" resultType="TComment">
		select * from t_comments
			where id = #{id}
	</select>
	
	<select id="selectTCommentByPostId" resultType="TComment">
		select * from t_comments
			where post_id = #{postId}
			order by id
	</select>
	
	<select id="selectNicknameByParentId" resultType="String">
		select nickname from t_comments
			where id = #{parentId}
	</select>
	
	<update id="updateTCommentById">
		update t_comments
			set ctext = #{ctext}, modified_time = systimestamp
			where id = #{id}
	</update>
	
	<update id="updateTCommentLikeDeleteById">
		update t_comments
			set ctext = '작성자가 삭제한 댓글입니다.', modified_time = systimestamp, deleted = 1
			where id = #{id}
	</update>
	
	<delete id="deleteTCommentById">
		delete from t_comments 
			where id = #{id}
    </delete>
</mapper>