<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.running.repository.GCommentDao">

    <select id="selectByPostIdOrderByLevels" resultType="GComment">
        select *
        from g_comments where post_id=#{postId}
        start with parent_id is null connect by prior id=parent_id order siblings
        by created_time
    </select>

    <select id="selectByUserId" resultType="GComment">
        select * from g_comments
        where user_id=#{user_id} order by id desc
    </select>

    <select id="selectById" resultType="GComment">
        select * from g_comments
        where id=#{id}
    </select>

    <select id="isCommentDeletable" resultType="Integer">
        select case 
           when exists (
               select 1
               from g_comments
               where parent_id = #{id}            ) and 
           (select parent_id 
            from g_comments 
            where id = #{id}) is null            
           then 0
           else 1
       end as is_valid
from dual
    </select>

    <insert id="insertComment">
        insert into g_comments (post_id, user_id, nickname,
        ctext, created_time, modified_time, comment_type, secret, parent_id)
        values(#{postId}, #{userId}, #{nickname}, #{ctext}, systimestamp,
        systimestamp, #{commentType}, #{secret}, #{parentId})
    </insert>

    <update id="updateComment">
        update g_comments set ctext=#{ctext},
        secret=#{secret}, modified_time=systimestamp where id=#{id}
    </update>
    
    <update id="updateToUnknown">
        update g_comments set ctext=#{ctext}, user_id=#{userId}, nickname=#{nickname} where id=#{id}
    </update>

    <delete id="deleteByPostId">
        delete from g_comments where post_id=#{postId}
    </delete>
    
    <delete id="deleteUnknownComments">
        delete from g_comments where user_id = 'unknown'
        and not exists (
                select 1
                from g_comments sub
                where sub.parent_id = g_comments.id
                )
    </delete>

    <delete id="deleteById">
        delete from g_comments where id=#{id}
    </delete>


</mapper>